// pages/moodboard.tsx - Updated to use 3D visualization
import { useState, useEffect } from 'react'
import { motion } from 'framer-motion'
import dynamic from 'next/dynamic'
import Head from 'next/head'

// Dynamically import the 3D component to avoid SSR issues
const ThreeMoodboard = dynamic(() => import('../components/ThreeMoodboard'), {
  ssr: false,
  loading: () => (
    <div className="w-full h-screen bg-black flex items-center justify-center">
      <div className="text-center">
        <motion.div
          className="w-16 h-16 border-2 border-cyan-400 border-t-transparent rounded-full mx-auto mb-6"
          animate={{ rotate: 360 }}
          transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
        />
        <motion.h2 
          className="text-2xl font-bold bg-gradient-to-r from-cyan-400 to-blue-600 bg-clip-text text-transparent mb-2"
          animate={{ opacity: [0.5, 1, 0.5] }}
          transition={{ duration: 2, repeat: Infinity }}
        >
          Loading 3D Moodboard...
        </motion.h2>
        <p className="text-gray-400 text-sm">Preparing your creative space</p>
      </div>
    </div>
  )
})

interface MoodboardItem {
  id: string
  type: 'image' | 'text' | 'link' | 'quote'
  content: string
  title?: string
  author?: string
  url?: string
  color?: string
  size: 'small' | 'medium' | 'large'
}

// Default sample items - these will be replaced by your content manager data
const sampleItems: MoodboardItem[] = [
  {
    id: '1',
    type: 'quote',
    content: 'The future belongs to those who believe in the beauty of their dreams.',
    author: 'Eleanor Roosevelt',
    size: 'medium',
    color: 'bg-blue-100 dark:bg-blue-900/30'
  },
  {
    id: '2',
    type: 'text',
    content: 'Web3 represents the next evolution of the internet - decentralized, user-owned, and built on trustless protocols.',
    title: 'Web3 Vision',
    size: 'large',
    color: 'bg-purple-100 dark:bg-purple-900/30'
  },
  {
    id: '3',
    type: 'link',
    content: 'An incredible deep dive into the technical architecture of Ethereum 2.0 and its implications for scalability.',
    title: 'Ethereum 2.0 Architecture',
    url: 'https://ethereum.org/en/eth2/',
    size: 'medium',
    color: 'bg-green-100 dark:bg-green-900/30'
  },
  {
    id: '4',
    type: 'text',
    content: 'Brutalist web design meets Web3 aesthetics - exploring the intersection of raw, honest design with decentralized technology.',
    title: 'Design Inspiration',
    size: 'small',
    color: 'bg-yellow-100 dark:bg-yellow-900/30'
  },
  {
    id: '5',
    type: 'quote',
    content: 'Code is poetry.',
    author: 'WordPress Philosophy',
    size: 'small',
    color: 'bg-pink-100 dark:bg-pink-900/30'
  },
  {
    id: '6',
    type: 'text',
    content: 'Exploring the intersection of art and technology through generative algorithms and blockchain-based ownership models.',
    title: 'Generative Art & NFTs',
    size: 'large',
    color: 'bg-indigo-100 dark:bg-indigo-900/30'
  },
  {
    id: '7',
    type: 'link',
    content: 'Amazing collection of Web3 design patterns and UI components that prioritize user experience in decentralized applications.',
    title: 'Web3 Design Systems',
    url: 'https://web3.design',
    size: 'medium',
    color: 'bg-teal-100 dark:bg-teal-900/30'
  },
  {
    id: '8',
    type: 'text',
    content: 'The evolution from Web 1.0 (read) to Web 2.0 (read-write) to Web 3.0 (read-write-own) represents a fundamental shift in digital ownership.',
    title: 'Evolution of the Web',
    size: 'small',
    color: 'bg-orange-100 dark:bg-orange-900/30'
  },
  {
    id: '9',
    type: 'quote',
    content: 'The best way to predict the future is to invent it.',
    author: 'Alan Kay',
    size: 'medium',
    color: 'bg-red-100 dark:bg-red-900/30'
  },
  {
    id: '10',
    type: 'text',
    content: 'Decentralized Autonomous Organizations (DAOs) are reimagining how communities organize, govern, and create value together.',
    title: 'DAO Revolution',
    size: 'large',
    color: '#64ffda'
  }
]

export default function Moodboard() {
  const [items, setItems] = useState<MoodboardItem[]>(sampleItems)
  const [mounted, setMounted] = useState(false)
  const [isWebGLSupported, setIsWebGLSupported] = useState(true)
  const [showWelcome, setShowWelcome] = useState(true)

  useEffect(() => {
    setMounted(true)
    
    // Check WebGL support
    const canvas = document.createElement('canvas')
    const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl')
    if (!gl) {
      setIsWebGLSupported(false)
    }

    // Load items from file or localStorage
    loadMoodboardItems()

    // Hide welcome message after 3 seconds
    const timer = setTimeout(() => {
      setShowWelcome(false)
    }, 3000)

    return () => clearTimeout(timer)
  }, [])

  const loadMoodboardItems = async () => {
    try {
      // Try to load from the data file first (generated by content manager)
      const response = await fetch('/data/moodboard.json')
      if (response.ok) {
        const data = await response.json()
        if (data.moodboardItems && Array.isArray(data.moodboardItems)) {
          setItems(data.moodboardItems)
          return
        }
      }
    } catch (error) {
      console.log('No moodboard.json found, using sample data')
    }

    // Fallback to localStorage or sample items
    try {
      const savedItems = localStorage.getItem('moodboard-items')
      if (savedItems) {
        const parsed = JSON.parse(savedItems)
        if (Array.isArray(parsed)) {
          setItems(parsed)
        }
      }
    } catch (error) {
      console.log('Using sample moodboard items')
    }
  }

  if (!mounted) {
    return (
      <>
        <Head>
          <title>Vision - jackfredericksen.eth</title>
          <meta name="description" content="Interactive 3D moodboard showcasing creative inspiration and ideas" />
        </Head>
        <div className="min-h-screen bg-black flex items-center justify-center">
          <div className="text-center">
            <motion.div
              className="w-16 h-16 border-2 border-cyan-400 border-t-transparent rounded-full mx-auto mb-6"
              animate={{ rotate: 360 }}
              transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
            />
            <p className="text-cyan-400 text-lg font-medium">Preparing 3D Experience...</p>
          </div>
        </div>
      </>
    )
  }

  if (!isWebGLSupported) {
    return (
      <>
        <Head>
          <title>Vision - jackfredericksen.eth</title>
          <meta name="description" content="Interactive 3D moodboard showcasing creative inspiration and ideas" />
        </Head>
        <div className="min-h-screen bg-black flex items-center justify-center p-8">
          <div className="max-w-md text-center">
            <motion.div
              className="w-16 h-16 bg-red-500/20 rounded-full flex items-center justify-center mx-auto mb-6"
              initial={{ scale: 0 }}
              animate={{ scale: 1 }}
            >
              <svg className="w-8 h-8 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5C2.962 18.333 3.924 20 5.464 20z" />
              </svg>
            </motion.div>
            <h2 className="text-2xl font-bold text-white mb-4">WebGL Not Supported</h2>
            <p className="text-gray-400 mb-6 leading-relaxed">
              Your browser doesn't support WebGL, which is required for the 3D moodboard experience. 
              Please try updating your browser or enabling hardware acceleration.
            </p>
            <div className="space-y-3">
              <a
                href="/"
                className="block w-full bg-cyan-500/20 hover:bg-cyan-500/30 text-cyan-400 py-3 px-6 rounded-lg transition-colors duration-300 border border-cyan-500/30"
              >
                Return to Homepage
              </a>
            </div>
          </div>
        </div>
      </>
    )
  }

  return (
    <>
      <Head>
        <title>Vision - jackfredericksen.eth</title>
        <meta name="description" content="Interactive 3D moodboard showcasing creative inspiration, ideas, and vision for the future of Web3" />
        <meta name="keywords" content="moodboard, 3D visualization, Web3, inspiration, creativity, jackfredericksen" />
      </Head>
      
      <div className="relative">
        {/* Full-screen 3D moodboard */}
        <ThreeMoodboard
          items={items}
          className="fixed inset-0 z-0"
        />

        {/* Welcome overlay */}
        {showWelcome && (
          <motion.div
            initial={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 1 }}
            className="fixed inset-0 bg-black/90 backdrop-blur-sm z-50 flex items-center justify-center pointer-events-none"
            onAnimationComplete={() => {
              setTimeout(() => setShowWelcome(false), 2000)
            }}
          >
            <div className="text-center max-w-lg px-6">
              <motion.div
                initial={{ scale: 0 }}
                animate={{ scale: 1 }}
                transition={{ delay: 0.5, duration: 0.8, type: "spring" }}
                className="text-6xl mb-6"
              >
                ðŸŽ¨
              </motion.div>
              
              <motion.h1
                initial={{ y: 30, opacity: 0 }}
                animate={{ y: 0, opacity: 1 }}
                transition={{ delay: 1, duration: 0.8 }}
                className="text-4xl font-bold bg-gradient-to-r from-cyan-400 to-purple-500 bg-clip-text text-transparent mb-4"
              >
                Welcome to My Vision
              </motion.h1>
              
              <motion.p
                initial={{ y: 30, opacity: 0 }}
                animate={{ y: 0, opacity: 1 }}
                transition={{ delay: 1.5, duration: 0.8 }}
                className="text-gray-300 text-lg leading-relaxed mb-4"
              >
                Explore my creative moodboard in 3D space - ideas, inspiration, and thoughts floating freely
              </motion.p>
              
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 2.5, duration: 0.5 }}
                className="text-sm text-gray-400"
              >
                <p>â€¢ Use WASD to fly around â€¢ Click to explore â€¢ C to toggle camera modes</p>
              </motion.div>
            </div>
          </motion.div>
        )}

        {/* Content manager hint */}
        {items.length === sampleItems.length && (
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 4, duration: 0.5 }}
            className="fixed bottom-20 left-1/2 transform -translate-x-1/2 z-40 bg-black/70 backdrop-blur-md rounded-lg p-4 border border-cyan-500/30 max-w-sm text-center"
          >
            <div className="text-cyan-400 font-medium mb-2">ðŸ’¡ Pro Tip</div>
            <p className="text-gray-300 text-sm">
              Use the Content Manager app to create your own moodboard items with rich media support!
            </p>
          </motion.div>
        )}

        {/* Home link */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 3, duration: 0.5 }}
          className="fixed top-6 left-6 z-40"
        >
          <a
            href="/"
            className="flex items-center space-x-2 bg-black/30 backdrop-blur-md text-gray-300 hover:text-white px-4 py-2 rounded-full border border-gray-700/50 hover:border-gray-500/50 transition-all duration-300"
          >
            <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            <span className="text-sm font-medium">Back to Genesis</span>
          </a>
        </motion.div>

        {/* Admin access hint */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 5, duration: 0.5 }}
          className="fixed bottom-6 left-6 z-40 bg-black/30 backdrop-blur-md rounded-lg p-3 border border-gray-700/50 text-xs text-gray-400"
        >
          <p>Triple-click your ENS domain in navigation for admin access</p>
        </motion.div>
      </div>
    </>
  )
}